// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should validate config.yml should require paths 1`] = `"paths: Expected array, but was undefined"`;

exports[`should validate config.yml should require presets 1`] = `"presets: Expected { [_: string]: { steps: ({ $compress: { quality?: number; lossy?: boolean; }; } | { $crop: { width?: number; height?: number; gravity?: \\"center\\" | \\"face\\" | \\"north\\" | \\"northeast\\" | \\"east\\" | \\"southeast\\" | \\"south\\" | \\"southwest\\" | \\"west\\" | \\"northwest\\"; }; } | { $fill: { width: number; height: number; gravity: undefined | (\\"center\\" | \\"face\\" | \\"north\\" | \\"northeast\\" | \\"east\\" | \\"southeast\\" | \\"south\\" | \\"southwest\\" | \\"west\\" | \\"northwest\\"); }; } | { $fit: { width?: number; height?: number; gravity?: \\"center\\" | \\"face\\" | \\"north\\" | \\"northeast\\" | \\"east\\" | \\"southeast\\" | \\"south\\" | \\"southwest\\" | \\"west\\" | \\"northwest\\"; }; } | { $format: { type?: \\"jpeg\\" | \\"png\\" | \\"gif\\" | \\"webp\\"; }; } | { $resize: { width: number; height: number; }; } | { $strip: { icu_profile?: boolean; }; })[]; } }, but was undefined"`;

exports[`should validate config.yml should require sources 1`] = `"sources: Expected array, but was undefined"`;

exports[`should validate config.yml should require valid http root url 1`] = `"sources.[0]: Expected { http: { root: string; }; } | { s3: { access_key_id: string; secret_access_key: string; region: string; bucket_name: string; path: string; }; }, but was object"`;

exports[`should validate config.yml should require valid paths array 1`] = `"paths: Expected array, but was object"`;

exports[`should validate config.yml should require valid paths array 2`] = `"paths: Requires at least one path"`;

exports[`should validate config.yml should require valid paths array 3`] = `"paths.[0]: Cannot be empty"`;

exports[`should validate config.yml should require valid paths array 4`] = `"paths.[0]: Requires :preset in path"`;

exports[`should validate config.yml should require valid paths array 5`] = `"paths.[0]: Requires :preset in path"`;

exports[`should validate config.yml should require valid paths array 6`] = `"paths.[0]: Must start with /"`;

exports[`should validate config.yml should require valid presets 1`] = `"presets.t_200.steps: Expected array, but was undefined"`;

exports[`should validate config.yml should require valid presets 2`] = `"presets.t_200.steps: Expected array, but was object"`;

exports[`should validate config.yml should require valid presets 3`] = `"presets.t_200.steps.[0]: Expected { $compress: { quality?: number; lossy?: boolean; }; } | { $crop: { width?: number; height?: number; gravity?: \\"center\\" | \\"face\\" | \\"north\\" | \\"northeast\\" | \\"east\\" | \\"southeast\\" | \\"south\\" | \\"southwest\\" | \\"west\\" | \\"northwest\\"; }; } | { $fill: { width: number; height: number; gravity: undefined | (\\"center\\" | \\"face\\" | \\"north\\" | \\"northeast\\" | \\"east\\" | \\"southeast\\" | \\"south\\" | \\"southwest\\" | \\"west\\" | \\"northwest\\"); }; } | { $fit: { width?: number; height?: number; gravity?: \\"center\\" | \\"face\\" | \\"north\\" | \\"northeast\\" | \\"east\\" | \\"southeast\\" | \\"south\\" | \\"southwest\\" | \\"west\\" | \\"northwest\\"; }; } | { $format: { type?: \\"jpeg\\" | \\"png\\" | \\"gif\\" | \\"webp\\"; }; } | { $resize: { width: number; height: number; }; } | { $strip: { icu_profile?: boolean; }; }, but was object"`;

exports[`should validate config.yml should require valid presets 4`] = `"presets.t_200.steps.[0]: Expected { $compress: { quality?: number; lossy?: boolean; }; } | { $crop: { width?: number; height?: number; gravity?: \\"center\\" | \\"face\\" | \\"north\\" | \\"northeast\\" | \\"east\\" | \\"southeast\\" | \\"south\\" | \\"southwest\\" | \\"west\\" | \\"northwest\\"; }; } | { $fill: { width: number; height: number; gravity: undefined | (\\"center\\" | \\"face\\" | \\"north\\" | \\"northeast\\" | \\"east\\" | \\"southeast\\" | \\"south\\" | \\"southwest\\" | \\"west\\" | \\"northwest\\"); }; } | { $fit: { width?: number; height?: number; gravity?: \\"center\\" | \\"face\\" | \\"north\\" | \\"northeast\\" | \\"east\\" | \\"southeast\\" | \\"south\\" | \\"southwest\\" | \\"west\\" | \\"northwest\\"; }; } | { $format: { type?: \\"jpeg\\" | \\"png\\" | \\"gif\\" | \\"webp\\"; }; } | { $resize: { width: number; height: number; }; } | { $strip: { icu_profile?: boolean; }; }, but was object"`;

exports[`should validate config.yml should require valid presets 5`] = `"presets.t_200.steps.[0]: Expected { $compress: { quality?: number; lossy?: boolean; }; } | { $crop: { width?: number; height?: number; gravity?: \\"center\\" | \\"face\\" | \\"north\\" | \\"northeast\\" | \\"east\\" | \\"southeast\\" | \\"south\\" | \\"southwest\\" | \\"west\\" | \\"northwest\\"; }; } | { $fill: { width: number; height: number; gravity: undefined | (\\"center\\" | \\"face\\" | \\"north\\" | \\"northeast\\" | \\"east\\" | \\"southeast\\" | \\"south\\" | \\"southwest\\" | \\"west\\" | \\"northwest\\"); }; } | { $fit: { width?: number; height?: number; gravity?: \\"center\\" | \\"face\\" | \\"north\\" | \\"northeast\\" | \\"east\\" | \\"southeast\\" | \\"south\\" | \\"southwest\\" | \\"west\\" | \\"northwest\\"; }; } | { $format: { type?: \\"jpeg\\" | \\"png\\" | \\"gif\\" | \\"webp\\"; }; } | { $resize: { width: number; height: number; }; } | { $strip: { icu_profile?: boolean; }; }, but was object"`;

exports[`should validate config.yml should require valid source 1`] = `"sources.[0]: Expected { http: { root: string; }; } | { s3: { access_key_id: string; secret_access_key: string; region: string; bucket_name: string; path: string; }; }, but was object"`;

exports[`should validate config.yml should require valid source http 1`] = `"sources.[0]: Expected { http: { root: string; }; } | { s3: { access_key_id: string; secret_access_key: string; region: string; bucket_name: string; path: string; }; }, but was object"`;

exports[`should validate config.yml should require valid source s3 1`] = `"sources.[0]: Expected { http: { root: string; }; } | { s3: { access_key_id: string; secret_access_key: string; region: string; bucket_name: string; path: string; }; }, but was object"`;

exports[`should validate config.yml should require valid source s3 2`] = `"sources.[0]: Expected { http: { root: string; }; } | { s3: { access_key_id: string; secret_access_key: string; region: string; bucket_name: string; path: string; }; }, but was object"`;

exports[`should validate config.yml should require valid sources array 1`] = `"sources: Expected array, but was object"`;

exports[`should validate config.yml should throw on any other type of source 1`] = `"sources.[0]: Expected { http: { root: string; }; } | { s3: { access_key_id: string; secret_access_key: string; region: string; bucket_name: string; path: string; }; }, but was object"`;
